{
  "swagger": "2.0",
  "info": {
    "title": "Weave GitOps Core API",
    "description": "The API handles operations for Weave GitOps Core",
    "version": "0.1"
  },
  "tags": [
    {
      "name": "Core"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/child_objects": {
      "post": {
        "summary": "GetChildObjects returns the children of a given object, specified by a GroupVersionKind.\nNot all Kubernets objects have children. For example, a Deployment has a child ReplicaSet, but a Service has no child objects.",
        "operationId": "Core_GetChildObjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetChildObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetChildObjectsRequest"
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/events": {
      "get": {
        "summary": "ListEvents returns with a list of events",
        "operationId": "Core_ListEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "involvedObject.kind",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "involvedObject.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "involvedObject.namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "involvedObject.clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/featureflags": {
      "get": {
        "summary": "GetFeatureFlags returns configuration information about the server",
        "operationId": "Core_GetFeatureFlags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetFeatureFlagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/flux_crds": {
      "get": {
        "operationId": "Core_ListFluxCrds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFluxCrdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/flux_runtime_objects": {
      "get": {
        "summary": "ListFluxRuntimeObjects lists the flux runtime deployments from a cluster.",
        "operationId": "Core_ListFluxRuntimeObjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFluxRuntimeObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/namespace/flux": {
      "post": {
        "summary": "GetFluxNamespace returns with a namespace with a specific label.",
        "operationId": "Core_GetFluxNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetFluxNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetFluxNamespaceRequest"
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/namespaces": {
      "get": {
        "summary": "ListNamespaces returns with the list of available namespaces.",
        "operationId": "Core_ListNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListNamespacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/object/{name}": {
      "get": {
        "summary": "GetObject gets data about a single primary object from a cluster.",
        "operationId": "Core_GetObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/objects": {
      "post": {
        "summary": "ListObjects gets data about primary objects.",
        "operationId": "Core_ListObjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListObjectsRequest"
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/reconciled_objects": {
      "post": {
        "summary": "GetReconciledObjects returns a list of objects that were created as a result a Flux automation.\nThis list is derived by looking at the Kustomization or HelmRelease specified in the request body.",
        "operationId": "Core_GetReconciledObjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetReconciledObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetReconciledObjectsRequest"
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/session/{sessionId}/logs": {
      "get": {
        "summary": "GetSessionLogs returns the logs for a given session",
        "operationId": "Core_GetSessionLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSessionLogsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/suspend": {
      "post": {
        "summary": "ToggleSuspendResource suspends or resumes a flux object.",
        "operationId": "Core_ToggleSuspendResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ToggleSuspendResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ToggleSuspendResourceRequest"
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/sync": {
      "post": {
        "summary": "SyncResource forces a reconciliation of a Flux resource",
        "operationId": "Core_SyncFluxObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SyncFluxObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SyncFluxObjectRequest"
            }
          }
        ],
        "tags": [
          "Core"
        ]
      }
    },
    "/v1/version": {
      "get": {
        "summary": "GetVersion returns version information about the server",
        "operationId": "Core_GetVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Core"
        ]
      }
    }
  },
  "definitions": {
    "CrdName": {
      "type": "object",
      "properties": {
        "plural": {
          "type": "string"
        },
        "group": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Condition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        }
      }
    },
    "v1Crd": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/CrdName"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "v1Deployment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Condition"
          }
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "suspended": {
          "type": "boolean"
        },
        "clusterName": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1Event": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "component": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "v1GetChildObjectsRequest": {
      "type": "object",
      "properties": {
        "groupVersionKind": {
          "$ref": "#/definitions/v1GroupVersionKind"
        },
        "namespace": {
          "type": "string"
        },
        "parentUid": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        }
      }
    },
    "v1GetChildObjectsResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Object"
          }
        }
      }
    },
    "v1GetFeatureFlagsResponse": {
      "type": "object",
      "properties": {
        "flags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1GetFluxNamespaceRequest": {
      "type": "object"
    },
    "v1GetFluxNamespaceResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1GetObjectResponse": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/v1Object"
        }
      }
    },
    "v1GetReconciledObjectsRequest": {
      "type": "object",
      "properties": {
        "automationName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "automationKind": {
          "type": "string"
        },
        "kinds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupVersionKind"
          }
        },
        "clusterName": {
          "type": "string"
        }
      }
    },
    "v1GetReconciledObjectsResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Object"
          }
        }
      }
    },
    "v1GetSessionLogsResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextToken": {
          "type": "string"
        }
      }
    },
    "v1GetVersionResponse": {
      "type": "object",
      "properties": {
        "semver": {
          "type": "string"
        },
        "commit": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "buildTime": {
          "type": "string"
        },
        "fluxVersion": {
          "type": "string"
        },
        "kubeVersion": {
          "type": "string"
        }
      }
    },
    "v1GroupVersionKind": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "GroupVersionKind represents an objects Kubernetes API type data"
    },
    "v1ListError": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1ListEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Event"
          }
        }
      }
    },
    "v1ListFluxCrdsResponse": {
      "type": "object",
      "properties": {
        "crds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Crd"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ListError"
          }
        }
      }
    },
    "v1ListFluxRuntimeObjectsResponse": {
      "type": "object",
      "properties": {
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Deployment"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ListError"
          }
        }
      }
    },
    "v1ListNamespacesResponse": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Namespace"
          }
        }
      }
    },
    "v1ListObjectsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1ListObjectsResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Object"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ListError"
          }
        }
      }
    },
    "v1Namespace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterName": {
          "type": "string"
        }
      }
    },
    "v1Object": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "inventory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupVersionKind"
          }
        }
      }
    },
    "v1ObjectRef": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        }
      }
    },
    "v1SyncFluxObjectRequest": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ObjectRef"
          }
        },
        "withSource": {
          "type": "boolean"
        }
      }
    },
    "v1SyncFluxObjectResponse": {
      "type": "object"
    },
    "v1ToggleSuspendResourceRequest": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ObjectRef"
          }
        },
        "suspend": {
          "type": "boolean"
        }
      }
    },
    "v1ToggleSuspendResourceResponse": {
      "type": "object"
    }
  }
}
